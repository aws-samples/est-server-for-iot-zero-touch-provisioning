# Configuration of the EST Server
Properties:
  # EST Service
  apiCustomDomainName: "YOUR API DOMAIN NAME HERE"
  apiCertificateArn: "YOUR API CERTIFICATE ARN from CERTIFICATE MANAGER  HERE"
  apiOwnershipVerificationCertificateArn: "YOUR API OWNERSHIP VERIFICATION CERTIFICATE ARN from CERTIFICATE MANAGER HERE IF NECESSARY"
  # Enable or disable caller Headers
  apiStrictHeadersCheck: true
  # EST mTLS server side
  estMtlsCaSecretsName: "estMtlsCaSecrets"
  estMtlsCaCertValidity: 10
  # EST mTLS client side
  estMtlsClientSecretsName: "estMtlsClientSecrets"
  estMtlsClientPfxSecretName: "estMtlsClientPfx"
  estMtlsClientCertValidity: 10
  # IoT Core
  iotCoreEstCaCertSecretName: "estIotCoreCaSecretCert4"
  iotCoreEstCaKeySecretName: "estIotCoreCaSecretKey4"
  iotCoreEstCaValidityYears: 10
  iotTemplatePath: "config/iot_template_default.json"
  iotTemplateName: "est_iot_provisioning_template" # 36 characters max !!
  iotPolicyPath: "config/iot_policy_default.json"
  iotPolicyName: "est_iot_policy_default"
  # Lambda functions (applies to all, can be modified individually with function environment variable)
  lambdaLoggerLevel: "INFO"
  # Customization
  customSecretName: "customSecret"

DeploymentOptions:
  # mTLS Truststore certificate chain - generated if ""
  mTlsTruststoreCertificatesChainFile: ""
  # Path to the IoT Core CA Certificate if provided or ""
  iotCoreCaCertificatePath: ""
  # Path to the IoT Core CA Private Key if provided or ""
  iotCoreCaPrivateKeyPath: ""
  # Generates Iot Core self-signed certificate and private key for signing CSR
  # Ignored if iotCoreCaCertificatePath (above) is not ""
  generateIotCaCertificate: true
  # If 'true' IoT Core will be configured for JITP
  configureJITP: true
